{"version":3,"sources":["node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/core/Camera.js","node_modules/ogl/src/math/functions/Mat3Func.js","node_modules/ogl/src/math/Mat3.js","node_modules/ogl/src/core/Mesh.js","node_modules/ogl/src/core/Texture.js","node_modules/ogl/src/core/RenderTarget.js","node_modules/ogl/src/math/functions/ColorFunc.js","node_modules/ogl/src/math/Color.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","node_modules/ogl/src/math/Vec4.js","node_modules/ogl/src/extras/Plane.js","node_modules/ogl/src/extras/Box.js","node_modules/ogl/src/extras/Sphere.js","node_modules/ogl/src/extras/Cylinder.js","node_modules/ogl/src/extras/Triangle.js","node_modules/ogl/src/extras/Orbit.js","node_modules/ogl/src/extras/Raycast.js","node_modules/ogl/src/extras/Post.js","node_modules/ogl/src/extras/Animation.js","node_modules/ogl/src/extras/Skin.js","node_modules/ogl/src/extras/Text.js","node_modules/ogl/src/extras/NormalProgram.js","node_modules/ogl/src/extras/Flowmap.js","node_modules/ogl/src/extras/GPGPU.js","node_modules/ogl/src/extras/Polyline.js","node_modules/ogl/src/extras/Shadow.js","node_modules/ogl/src/extras/KTXTexture.js","node_modules/ogl/src/extras/TextureLoader.js","node_modules/ogl/src/extras/GLTFLoader.js","node_modules/ogl/src/index.mjs","src/utils.js","src/index.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","transformMat3","transformQuat","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix4","mat4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","console","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPositionArray","position","computeBoundingBox","array","bounds","center","radius","Infinity","i","l","computeBoundingSphere","maxRadiusSq","remove","vao","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","currentProgram","useProgram","activeUniform","undefined","texture","setUniform","update","textureUnits","push","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","canvas","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","c","b12","b20","b21","b22","hypot","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","toLowerCase","Color","isArray","ColorFunc","r","g","transformMat2","transformMat2d","Vec2","Vec2Func","applyMatrix3","mat3","Vec4","Vec4Func","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addCap","isTop","sign","centerIndex","theta","cosTheta","sinTheta","addHeight","slope","indexRow","Triangle","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","enableZoom","zoomSpeed","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","sinPhiRadius","rotateStart","panStart","dollyStart","getZoomScale","pow","mouseButtons","ORBIT","ZOOM","pan","deltaX","deltaY","el","body","targetDistance","panLeft","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","window","addEventListener","onMouseMove","onMouseUp","handleMouseMoveDolly","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","handleTouchStartDollyPan","dx","dy","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","passive","tempVec3c","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","invWorldMat4","hits","raycast","localDistance","intersectSphere","intersectBox","hit","localPoint","point","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","Post","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","defaultVertex","defaultFragment","textureUniform","pass","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","floor","blend","prevKey","nextKey","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","log","LN2","boneMatrices","RGBA16F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","createGeometry","common","base","chars","numChars","replace","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","char","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","pop","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","HALF_FLOAT","HALF_FLOAT_OES","RGBA32F","velocity","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","tmp","Polyline","points","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","p","Shadow","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","error","BYTES_PER_ELEMENT","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","TextureLoader","load","support","getSupportedExtensions","ext","prop","includes","loaded","loadKTX","loadImage","pvrtc","s3tc","etc","etc1","astc","detectWebP","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","toDataURL","log2","Promise","resolve","img","Image","isChrome","navigator","userAgent","createImageBitmap","onload","imageOrientation","TYPE_ARRAY","Int16Array","TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","GLTFLoader","dir","desc","json","asset","version","loadBuffers","bufferViews","parseBufferViews","parseMeshes","nodes","parseNodes","scenes","parseScenes","resolveURI","uri","all","map","primitives","indices","accessors","bufferView","componentType","bufferIndex","byteOffset","byteLength","byteStride","extras","TypeArray","elementBytes","weights","parsePrimitives","material","targets","parseAccessor","bufferViewIndex","sparse","bufferViewByteOffset","skin","meshIndex","translation","childIndex","nodesIndices","init","shaderTaggedTemplateLiteral","strings","exprs","reduce","acc","str","vert","frag","I","default","querySelector","getAttribute","touch","isTouchCapable","previousTime","previousMouse","url","flowmap","computeAspect","imageAspect","windowAspect","innerHeight","innerWidth","ah","av","updateMouse","event","changedTouches","P","performance","now","time","delta","setAttribute","appendChild","uTime","uUseMouse","uNoiseMultiplier","uWater","uFlow","requestAnimationFrame"],"mappings":"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","file":"src.e919b497.js","sourceRoot":"..","sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0], ay = a[1], az = a[2];\n    let bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0], y = a[1], z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0], y = a[1], z = a[2];\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n    \n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n    \n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    \n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    \n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function() {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function(a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        }\n        else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n    \n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        Vec3Func.cross(this, va, vb);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\tthis[2] = a[o + 2];\n\t\treturn this;\n    }\n\n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\ta[o + 2] = this[2];\n\t\treturn a;\n\t}\n    \n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n        \n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: add fallback for non vao support (ie)\n\nimport {Vec3} from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = {start: 0, count: 0};\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type = attr.type || (\n            attr.data.constructor === Float32Array ? this.gl.FLOAT : \n            attr.data.constructor === Uint16Array ? this.gl.UNSIGNED_SHORT : \n            this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || attr.data.length / attr.size;\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor);\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, name) => {\n\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n            this.gl.vertexAttribPointer(\n                location,\n                attr.size,\n                attr.type,\n                attr.normalized,\n                attr.stride,\n                attr.offset\n            );\n            this.gl.enableVertexAttribArray(location);\n\n            // For instanced attributes, divisor needs to be set.\n            // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n            this.gl.renderer.vertexAttribDivisor(location, attr.divisor);\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({\n        program,\n        mode = this.gl.TRIANGLES,\n    }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {   \n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, name) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(mode, this.drawRange.count, this.attributes.index.type, this.drawRange.start, this.instancedCount);\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPositionArray() {\n\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr.data;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return isBoundsWarned = true;\n    }\n\n    computeBoundingBox(array) {\n        if (!array) array = this.getPositionArray();\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: use offset/stride if exists\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(array) {\n        if (!array) array = this.getPositionArray();\n        if (!this.bounds) this.computeBoundingBox(array);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        if (this.vao) this.gl.renderer.deleteVertexArray(this.vao);\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(gl, {\n        vertex,\n        fragment,\n        uniforms = {},\n\n        transparent = false,\n        cullFace = gl.BACK,\n        frontFace = gl.CCW,\n        depthTest = true,\n        depthWrite = true,\n        depthFunc = gl.LESS,\n    } = {}) {\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n            \n            uniform.uniformName = split[0];\n            \n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = []; \n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute.name, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src) this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        if (this.blendEquation.modeRGB) this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({\n        flipFaces = false,\n    } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n                \n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach(value => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n                \n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined) {\n\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126  : return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664 : return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665 : return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666 : return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670 : // BOOL\n        case 5124  : // INT\n        case 35678 : // SAMPLER_2D\n        case 35680 : return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671 : // BOOL_VEC2\n        case 35667 : return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672 : // BOOL_VEC3\n        case 35668 : return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673 : // BOOL_VEC4\n        case 35669 : return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674 : return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675 : return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676 : return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i ++) {\n        lines[i] = (i + 1) + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n\tif (a.length !== b.length) return false;\n\tfor (let i = 0, l = a.length; i < l; i ++) {\n\t\tif (a[i] !== b[i]) return false;\n\t}\n\treturn true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i ++) {\n\t\ta[i] = b[i];\n\t}\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}","import {Vec3} from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = {alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference};\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) {\n            this.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n        }\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = {src: this.gl.ONE, dst: this.gl.ZERO};\n        this.state.blendEquation = {modeRGB: this.gl.FUNC_ADD};\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = {width: null, height: null};\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n        \n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        \n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic') ? \n            this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;\n\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha) return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        if (this.state.blendEquation.modeRGB === modeRGB &&\n            this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({target = this.gl.FRAMEBUFFER, buffer = null} = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({scene, camera, frustumCull, sort}) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse(node => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach(node => {\n\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({\n        scene,\n        camera,\n        target = null,\n        update = true,\n        sort = true,\n        frustumCull = true,\n        clear,\n    }) {\n\n        if (target === null) {\n\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear((this.color ? this.gl.COLOR_BUFFER_BIT : 0) | (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) | (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0));\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({scene, camera, frustumCull, sort});\n\n        renderList.forEach(node => {\n            node.draw({camera});\n        });\n    }\n}","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if ((1.0 - cosom) > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;  // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0])\n            i = 1;\n        if (m[8] > m[i * 3 + i])\n            i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\tthis[2] = a[o + 2];\n\t\tthis[3] = a[o + 3];\n\t\treturn this;\n    }\n    \n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\ta[o + 2] = this[2];\n\t\ta[o + 3] = this[3];\n\t\treturn a;\n\t}\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1], a02 = a[2], a03 = a[3];\n        let a12 = a[6], a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0], y = v[1], z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0], y = axis[1], z = axis[2];\n    let len = Math.hypot(x,y,z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function() {\n    const temp = [0, 0, 0];\n\n    return function(out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n    \n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n    \n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n    \n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n    \n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if ((sm11 > sm22) && (sm11 > sm33)) {\n            S = Math.sqrt(1.0 + sm11 - sm22- sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n    \n        return out;\n    }\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0], y = q[1], z = q[2], w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0], y = q[1], z = q[2], w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1, m01 = 0, m02 = 0, m03 = 0, \n        m10 = 0, m11 = 1, m12 = 0, m13 = 0, \n        m20 = 0, m21 = 0, m22 = 1, m23 = 0, \n        m30 = 0, m31 = 0, m32 = 0, m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    \n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(out, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === \"number\" ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({fov, aspect, near, far} = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({left, right, bottom, top, near, far}) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n}\n","\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport {Mat4} from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n}","import {Vec3} from '../math/Vec3.js';\nimport {Quat} from '../math/Quat.js';\nimport {Mat4} from '../math/Mat4.js';\nimport {Euler} from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (notifyParent && this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i ++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i ++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    };\n}","import {Transform} from './Transform.js';\nimport {Mat4} from '../math/Mat4.js';\nimport {Vec3} from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, {\n        near = 0.1,\n        far = 100,\n        fov = 45,\n        aspect = 1,\n        left,\n        right,\n        bottom,\n        top,\n        zoom = 1,\n    } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n        \n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({\n        near = this.near,\n        far = this.far,\n        fov = this.fov,\n        aspect = this.aspect,\n    } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({fov: fov * (Math.PI / 180), aspect, near, far});\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({left, right, bottom, top, near, far});\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n        \n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n        \n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n\t\tfor (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n\t\t\tif (distance < -radius) return false;\n\t\t}\n\t\treturn true;\n    }\n}","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0], y = q[1], z = q[2], w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2];\n    let a10 = a[3], a11 = a[4], a12 = a[5];\n    let a20 = a[6], a21 = a[7], a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2];\n    let a10 = a[3], a11 = a[4], a12 = a[5];\n    let a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0], a01 = a[1], a02 = a[2];\n    let a10 = a[3], a11 = a[4], a12 = a[5];\n    let a20 = a[6], a21 = a[7], a22 = a[8];\n\n    let b00 = b[0], b01 = b[1], b02 = b[2];\n    let b10 = b[3], b11 = b[4], b12 = b[5];\n    let b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(\n        m00 = 1, m01 = 0, m02 = 0, \n        m10 = 0, m11 = 1, m12 = 0, \n        m20 = 0, m21 = 0, m22 = 1\n    ) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(\n            vec3a[0],\n            vec3a[1],\n            vec3a[2],\n            vec3b[0],\n            vec3b[1],\n            vec3b[2],\n            vec3c[0],\n            vec3c[1],\n            vec3c[2]\n        );\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import {Transform} from './Transform.js';\nimport {Mat3} from '../math/Mat3.js';\nimport {Mat4} from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, {\n        geometry,\n        program,\n        mode = gl.TRIANGLES,\n        frustumCulled = true,\n        renderOrder = 0,\n    } = {}) {\n        super();\n        this.gl = gl;\n        this.id = ID++;\n\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({\n        camera,\n    } = {}) {\n        this.beforeRenderCallbacks.forEach(f => f && f({mesh: this, camera}));\n\n        // Set the matrix uniforms\n        if (camera) {\n\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: {value: null},\n                    viewMatrix: {value: null},\n                    modelViewMatrix: {value: null},\n                    normalMatrix: {value: null},\n                    projectionMatrix: {value: null},\n                    cameraPosition: {value: null},\n                });\n            }\n\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n\n        this.program.use({flipFaces});\n        this.geometry.draw({mode: this.mode, program: this.program});\n\n        this.afterRenderCallbacks.forEach(f => f && f({mesh: this, camera}));\n    }\n}","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(gl, {\n        image,\n        target = gl.TEXTURE_2D,\n        type = gl.UNSIGNED_BYTE,\n        format = gl.RGBA,\n        internalFormat = format,\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        generateMipmaps = true,\n        minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n        magFilter = gl.LINEAR,\n        premultiplyAlpha = false,\n        unpackAlignment = 4,\n        flipY = target == gl.TEXTURE_2D ? true : false,\n        anisotropy = 0,\n        level = 0,\n        width, // used for RenderTargets or Data Textures\n        height = width,\n    } = {}) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n        \n        this.store = {\n            image: null,\n        };\n        \n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(this.target, this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropy);\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n            \n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, this.level, this.internalFormat, this.format, this.type, this.image[i]);\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(this.target, level, this.internalFormat, this.image[level].width, this.image[level].height, 0, this.image[level].data);\n                }\n            } else {\n                \n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n                }\n            } else if (this.width) {\n\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}","// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport {Texture} from './Texture.js';\n\nexport class RenderTarget {\n    constructor(gl, {\n        width = gl.canvas.width,\n        height = gl.canvas.height,\n        target = gl.FRAMEBUFFER,\n        color = 1, // number of color attachments\n        depth = true,\n        stencil = false,\n        depthTexture = false, // note - stencil breaks\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        minFilter = gl.LINEAR,\n        magFilter = minFilter,\n        type = gl.UNSIGNED_BYTE,\n        format = gl.RGBA,\n        internalFormat = format,\n        unpackAlignment,\n        premultiplyAlpha,\n    } = {}) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(new Texture(gl, {\n                width, height, \n                wrapS, wrapT, minFilter, magFilter, type, format, internalFormat, unpackAlignment, premultiplyAlpha,\n                flipY: false,\n                generateMipmaps: false,\n            }));\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width, height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n\n}","const NAMES\t= {\n    \"black\" : \"#000000\",\n    \"white\" : \"#ffffff\",\n    \"red\" : \"#ff0000\",\n    \"green\" : \"#00ff00\",\n    \"blue\" : \"#0000ff\",\n    \"fuchsia\" : \"#ff00ff\",\n    \"cyan\" : \"#00ffff\",\n    \"yellow\" : \"#ffff00\",\n    \"orange\" : \"#ff8000\",\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [\n        parseInt(rgb[1], 16) / 255,\n        parseInt(rgb[2], 16) / 255,\n        parseInt(rgb[3], 16) / 255\n    ];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [\n        (num >> 16 & 255) / 255,\n        (num >> 8 & 255) / 255,\n        (num & 255) / 255,\n    ]\n}\n\nexport function parseColor(color) {\n    \n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n        \n    // Hex\n    if (color[0] === \"#\") return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n    \n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        return Vec2Func.cross(va, vb);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\treturn this;\n    }\n    \n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\treturn a;\n\t}\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\tthis[2] = a[o + 2];\n\t\tthis[3] = a[o + 3];\n\t\treturn this;\n    }\n    \n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\ta[o + 2] = this[2];\n\t\ta[o + 3] = this[3];\n\t\treturn a;\n\t}\n}\n","import {Geometry} from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, {\n        width = 1, \n        height = 1, \n        widthSegments = 1, \n        heightSegments = 1,\n        attributes = {},\n    } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = (num > 65536) ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        }); \n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs,\n        u = 0, v = 1, w = 2,\n        uDir = 1, vDir = -1,\n        i = 0, ii = 0\n    ) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}","import {Geometry} from '../core/Geometry.js';\nimport {Plane} from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, {\n        width = 1, \n        height = 1, \n        depth = 1, \n        widthSegments = 1, \n        heightSegments = 1,\n        depthSegments = 1,\n        attributes = {},\n    } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = (num > 65536) ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height,  width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0,  1, -1, i += (dSegs + 1) * (hSegs + 1), ii += dSegs * hSegs);\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth,  height, dSegs, hSegs, 0, 2, 1,  1,  1, i += (dSegs + 1) * (hSegs + 1), ii += dSegs * hSegs);\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, hSegs, 0, 2, 1,  1, -1, i += (wSegs + 1) * (dSegs + 1), ii += wSegs * dSegs);\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i += (wSegs + 1) * (dSegs + 1), ii += wSegs * dSegs);\n        Plane.buildPlane(position, normal, uv, index, width, height,  depth, wSegs, hSegs, 0, 1, 2,  1, -1, i += (wSegs + 1) * (hSegs + 1), ii += wSegs * hSegs);\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        }); \n\n        super(gl, attributes);\n    }\n}","import {Geometry} from '../core/Geometry.js';\nimport {Vec3} from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(gl, {\n        radius = 0.5, \n        widthSegments = 16, \n        heightSegments = Math.ceil(widthSegments * 0.5), \n        phiStart = 0, \n        phiLength = Math.PI * 2, \n        thetaStart = 0, \n        thetaLength = Math.PI,\n        attributes = {},\n    } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6 ;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = (num > 65536) ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3]     = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3]     = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2]     = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3]     = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3]     = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        }); \n\n        super(gl, attributes);\n    }\n}","import {Geometry} from '../core/Geometry.js';\nimport {Vec3} from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(gl, {\n        radiusTop = 0.5,\n        radiusBottom = 0.5,\n        height = 1,\n        radialSegments = 8,\n        heightSegments = 1,\n        openEnded = false,\n        thetaStart = 0,\n        thetaLength = Math.PI * 2,\n        attributes = {},\n    } = {}) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3)\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { \n        attributes = {},\n    } = {}) {\n\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        }); \n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n\nimport {Vec3} from '../math/Vec3.js';\nimport {Vec2} from '../math/Vec2.js';\n\nconst STATE = {NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3};\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(object, {\n    element = document,\n    enabled = true,\n    target = new Vec3(),\n    ease = 0.25,\n    inertia = 0.85,\n    enableRotate = true,\n    rotateSpeed = 0.1,\n    enableZoom = true,\n    zoomSpeed = 1,\n    enablePan = true,\n    panSpeed = 0.1,\n    minPolarAngle = 0,\n    maxPolarAngle = Math.PI,\n    minAzimuthAngle = -Infinity,\n    maxAzimuthAngle = Infinity,\n    minDistance = 0,\n    maxDistance = Infinity,\n} = {}) {\n    this.enabled = enabled;\n    this.target = target;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 1;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = {radius: 1, phi: 0, theta: 0};\n    const sphericalTarget = {radius: 1, phi: 0, theta: 0};\n    const spherical = {radius: 1, phi: 0, theta: 0};\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.update = () => {\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = {ORBIT: 0, ZOOM: 1, PAN: 2};\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan(((object.fov || 45) / 2) * Math.PI / 180.0);\n        panLeft(2 * deltaX * targetDistance / el.clientHeight, object.matrix);\n        panUp(2 * deltaY * targetDistance / el.clientHeight, object.matrix);\n    };\n\n    function dolly(dollyScale) {\n        sphericalDelta.radius /= dollyScale;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= 2 * Math.PI * tempVec2b.x / el.clientHeight;\n        sphericalDelta.phi -= 2 * Math.PI * tempVec2b.y / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        if (!this.enabled) return;\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, {passive: false});\n        element.addEventListener('touchstart', onTouchStart, {passive: false});\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, {passive: false});\n    }\n\n    this.remove = function() {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}","// TODO: add barycentric ?\n\nimport {Vec3} from '../math/Vec3.js';\nimport {Mat4} from '../math/Mat4.js';\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor(gl) {\n        this.gl = gl;\n\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const {left, right, bottom, top, zoom} = camera;\n            const x = left / zoom + (right - left) / zoom * (mouse[0] * .5 + .5);\n            const y = bottom / zoom + (top - bottom) / zoom * (mouse[1] * .5 + .5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = [];\n\n        meshes.forEach(mesh => {\n\n            // Create bounds\n            if (!mesh.geometry.bounds) mesh.geometry.computeBoundingBox();\n            if (mesh.geometry.raycast === 'sphere' && mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n\n            // Take world space ray and make it object space to align with bounding box\n            invWorldMat4.inverse(mesh.worldMatrix);\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            if (mesh.geometry.raycast === 'sphere') {\n                localDistance = this.intersectSphere(mesh.geometry.bounds, origin, direction);\n            } else {\n                localDistance = this.intersectBox(mesh.geometry.bounds, origin, direction);\n            }\n            if (!localDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = {localPoint: new Vec3(), point: new Vec3()};\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n\n        if (d2 > radius2) return 0;\n\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n\n        if (t0 < 0 && t1 < 0) return 0;\n\n        if (t0 < 0) return t1;\n\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n    \n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n    \n        const min = box.min;\n        const max = box.max;\n\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n    \n        if ((tmin > tYmax) || (tYmin > tmax)) return 0;\n    \n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n    \n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n    \n        if ((tmin > tZmax) || (tZmin > tmax)) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n    \n        if (tmax < 0) return 0;\n\n        return tmin >= 0 ? tmin : tmax;\n    }\n}\n\n\n\n","// TODO: Destroy render targets if size changed and exists\n\nimport {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {RenderTarget} from '../core/RenderTarget.js';\nimport {Triangle} from './Triangle.js';\n\nexport class Post {\n    constructor(gl, {\n        width,\n        height,\n        dpr,\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        minFilter = gl.LINEAR,\n        magFilter = gl.LINEAR,\n        geometry = new Triangle(gl),\n        targetOnly = null,\n    } = {}) {\n        this.gl = gl;\n\n        this.options = {wrapS, wrapT, minFilter, magFilter};\n\n        this.passes = [];\n\n        this.geometry = geometry;   \n\n        this.uniform = {value: null};\n        this.targetOnly = targetOnly;\n\n        const fbo = this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        };\n\n        this.resize({width, height, dpr});\n    }\n\n    addPass({\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniforms = {},\n        textureUniform = 'tMap',\n        enabled = true,\n    } = {}) {\n        uniforms[textureUniform] = {value: this.fbo.read.texture};\n\n        const program = new Program(this.gl, {vertex, fragment, uniforms});\n        const mesh = new Mesh(this.gl, {geometry: this.geometry, program});\n\n        const pass = {\n            mesh, \n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({width, height, dpr} = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = (this.width || this.gl.renderer.width) * dpr;\n        height = (this.height || this.gl.renderer.height) * dpr;\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render\n    render({\n        scene,\n        camera,\n        target = null,\n        update = true,\n        sort = true,\n        frustumCull = true,\n    }) {\n        const enabledPasses = this.passes.filter(pass => pass.enabled);\n        \n        this.gl.renderer.render({\n            scene, camera,\n            target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n            update, sort, frustumCull,\n        });\n        this.fbo.swap();\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh, \n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: i === enabledPasses.length - 1 ? true : false,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import {Vec3} from '../math/Vec3.js';\nimport {Quat} from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({objects, data}) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3)\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}","import {Mesh} from '../core/Mesh.js';\nimport {Transform} from '../core/Transform.js';\nimport {Mat4} from '../math/Mat4.js';\nimport {Texture} from '../core/Texture.js';\nimport {Animation} from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, {\n        rig,\n        geometry,\n        program,\n        mode = gl.TRIANGLES,\n    } = {}) {\n        super(gl, {geometry, program, mode});\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: {value: this.boneTexture},\n            boneTextureSize: {value: this.boneTextureSize},\n        });\n    }\n\n    createBones(rig) {\n\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n        \n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3)\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        };\n        \n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach(bone => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA16F : this.gl.RGBA,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({objects: this.bones, data});\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach(animation => total += animation.weight);\n\n        this.animations.forEach((animation, i) => {\n\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({\n        camera,\n    } = {}) {\n\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({camera});\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach(d => glyphs[d.char] = d);\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([\n                    x,     y - h, 0,\n                    x,     y,     0,\n                    x + w, y - h, 0,\n                    x + w, y,     0\n                ], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([\n                    u,      v - vh,\n                    u,      v,\n                    u + uw, v - vh,\n                    u + uw, v,\n                ], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function(options) {\n        ({width} = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function(options) {\n        ({text} = options);\n        createGeometry()\n    };\n}\n\n","import {Program} from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}","import {RenderTarget} from '../core/RenderTarget.js';\nimport {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {Vec2} from '../math/Vec2.js';\nimport {Triangle} from './Triangle.js';\n\nexport class Flowmap {\n    constructor(gl, {\n        size = 128, // default size of the render targets\n        falloff = 0.3, // size of the stamp, percentage of the size\n        alpha = 1, // opacity of the stamp\n        dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n        type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n    } = {}) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = {value: null};\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        }\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size, \n                height: size, \n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 \n                    ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) \n                    : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: {value: falloff * 0.5},\n                        uAlpha: {value: alpha},\n                        uDissipation: {value: dissipation},\n\n                        // User needs to update these\n                        uAspect: {value: 1},\n                        uMouse: {value: _this.mouse},\n                        uVelocity: {value: _this.velocity},\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;","import {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {Texture} from '../core/Texture.js';\nimport {RenderTarget} from '../core/RenderTarget.js';\nimport {Triangle} from './Triangle.js';\n\nexport class GPGPU {\n    constructor(gl, {\n\n        // Always pass in array of vec4s (RGBA values within texture)\n        data = new Float32Array(16),\n\n        geometry = new Triangle(gl),\n        type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n    }) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {value: new Texture(gl, {\n            image: floatArray,\n            target: gl.TEXTURE_2D,\n            type: gl.FLOAT,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n            wrapS: gl.CLAMP_TO_EDGE,\n            wrapT: gl.CLAMP_TO_EDGE,\n            generateMipmaps: false,\n            minFilter: gl.NEAREST,\n            magFilter: gl.NEAREST,\n            width: this.size,\n            flipY: false,\n        })};\n\n        // Create FBOs\n        const options = {\n            width: this.size, \n            height: this.size, \n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 \n                ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) \n                : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniforms = {},\n        textureUniform = 'tMap',\n        enabled = true,\n    } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, {vertex, fragment, uniforms});\n        const mesh = new Mesh(this.gl, {geometry: this.geometry, program});\n\n        const pass = {\n            mesh, \n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter(pass => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh, \n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n};\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;","import {Geometry} from '../core/Geometry.js';\nimport {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {Vec2} from '../math/Vec2.js';\nimport {Vec3} from '../math/Vec3.js';\nimport {Color} from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(gl, {\n        points, // Array of Vec3s\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniforms = {},\n        attributes = {}, // For passing in custom attribs\n    }) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = this.geometry = new Geometry(gl, Object.assign(attributes, {\n            position: {size: 3, data: this.position},\n            prev: {size: 3, data: this.prev},\n            next: {size: 3, data: this.next},\n            side: {size: 1, data: side},\n            uv: {size: 2, data: uv},\n            index: {size: 1, data: index},\n        }));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = {value: new Vec2()};\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = {value: 1};\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = {value: 1};\n        if (!uniforms.uColor) this.color = uniforms.uColor = {value: new Color('#000')};\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = {value: 1};\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        });\n        \n        this.mesh = new Mesh(gl, {geometry, program});\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p).sub(this.points[i + 1]).add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p).sub(this.points[i - 1]).add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n};\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n\n\n\n\n","import {Camera} from '../core/Camera.js';\nimport {Program} from '../core/Program.js';\nimport {RenderTarget} from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, {\n        light = new Camera(gl),\n        width = 1024,\n        height = width,\n    }) {\n        this.gl = gl;\n\n        this.light = light;\n        \n        this.target = new RenderTarget(gl, {width, height});\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = {value: this.light.projectionMatrix};\n            mesh.program.uniforms[uniformView] = {value: this.light.viewMatrix};\n            mesh.program.uniforms[uniformTexture] = {value: this.target.texture};\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({scene}) {\n\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse(node => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                if (node.visible) node.isForceVisibility = true;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene, \n            camera: this.light, \n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse(node => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                if (node.isForceVisibility) node.visible = true;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, {\n        buffer,\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        anisotropy = 0,\n    } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n        \n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        this.minFilter = ktx.numberOfMipmapLevels > 1 ? this.gl.NEAREST_MIPMAP_LINEAR : this.gl.LINEAR;\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n};\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++)\n        if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// TODO: store cache with arguments\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nconst cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(gl, {\n        src, // string or object of extension:src key-values\n        // {\n        //     pvrtc: '...ktx',\n        //     s3tc: '...ktx',\n        //     etc: '...ktx',\n        //     etc1: '...ktx',\n        //     astc: '...ktx',\n        //     webp: '...webp',\n        //     jpg: '...jpg',\n        //     png: '...png',\n        // }\n\n        // Only props relevant to KTXTexture\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        anisotropy = 0,\n\n        // For regular images\n        format = gl.RGBA,\n        internalFormat = format,\n        generateMipmaps = true,\n        minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n        magFilter = gl.LINEAR,\n        premultiplyAlpha = false,\n        unpackAlignment = 4,\n        flipY = true,\n    } = {}) {\n        const support = this.getSupportedExtensions(gl);\n\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src\n                .split('.')\n                .pop()\n                .split('?')[0]\n                .toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                \n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n\n        // TODO: store in cache\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') \n                || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'), \n            s3tc: gl.renderer.getExtension('WEBGL_compressed_texture_s3tc')\n                || gl.renderer.getExtension('MOZ_WEBGL_compressed_texture_s3tc')\n                || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'),\n            etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then(res => res.arrayBuffer())\n            .then(buffer => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture) {\n        return decodeImage(src).then(imgBmp => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n        });\n    }\n}\n\nfunction detectWebP() {\n    return (\n        document\n            .createElement('canvas')\n            .toDataURL('image/webp')\n            .indexOf('data:image/webp') == 0\n    );\n}\n\nfunction powerOfTwo(value) {\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src) {\n    return new Promise(resolve => {\n        const img = new Image();\n        img.src = src;\n\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            img.onload = () => {\n                createImageBitmap(img, {\n                    imageOrientation: 'flipY',\n                    premultiplyAlpha: 'none',\n                }).then(imgBmp => {\n                    resolve(imgBmp);\n                });\n            };\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { NormalProgram } from './NormalProgram.js';\n\n// Supports\n// [x] Geometry\n// [x] Nodes and Hierarchy\n// [ ] Morph Targets\n// [ ] Skins\n// [ ] Materials\n// [ ] Textures\n// [ ] Animation\n// [ ] Cameras\n// [ ] Extensions\n\n// TODO: only push attribute bufferViews to the GPU\n// TODO: Sparse accessor packing? what for?\n// TODO: init accessor missing bufferView with 0s\n// TODO: is there ever more than one component type per buffer view? surely not...\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nexport class GLTFLoader {\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await fetch(src).then(res => res.json());\n\n        if (desc.asset === undefined || desc.asset.version[0] < 2) \n            console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            meshes,\n            nodes,\n            scenes,\n            scene,\n        };\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n        }\n\n        // Absolute URI http://, https://, //\n        if ( /^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static async loadBuffers(desc, dir) {\n        return await Promise.all(desc.buffers.map(buffer => {\n            const uri = this.resolveURI(buffer.uri, dir);\n            return fetch(uri).then(res => res.arrayBuffer());\n        }));\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        \n        // Clone to leave desc pure\n        const bufferViews = desc.bufferViews.map(o => Object.assign({}, o));\n\n        // Work out which bufferViews are for indices to determine whether\n        // target is gl.ELEMENT_ARRAY_BUFFER or gl.ARRAY_BUFFER;\n        desc.meshes.forEach(({primitives}) => {\n            primitives.forEach(({indices}) => {\n                if (indices === undefined) return;\n                bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n            });\n        })\n        \n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({bufferView: i, componentType}) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Push each bufferView to the GPU as a separate buffer\n        // TODO: only push attribute bufferViews to the GPU\n        bufferViews.forEach(({\n            buffer: bufferIndex, // required\n            byteOffset = 0, // optional\n            byteLength, // required\n            byteStride, // optional\n            target = gl.ARRAY_BUFFER, // optional, added above for elements\n            name, // optional\n            extensions, // optional\n            extras, // optional\n\n            componentType, // required, added from accessor above\n        }, i) => {\n            const TypeArray = TYPE_ARRAY[componentType];\n            const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n\n            // Create gl buffers for the bufferView, pushing it to the GPU\n            const data = new TypeArray(buffers[bufferIndex], byteOffset, byteLength / elementBytes);\n            const buffer = gl.createBuffer();\n            gl.bindBuffer(target, buffer);\n            gl.renderer.state.boundBuffer = buffer;\n            gl.bufferData(target, data, gl.STATIC_DRAW);\n\n            bufferViews[i].buffer = buffer;\n            bufferViews[i].data = data;\n        });\n\n        return bufferViews;\n    }\n\n    static parseMeshes(gl, desc, bufferViews) {\n        return desc.meshes.map(({\n            primitives, // required\n            weights, // optional\n            name, // optional\n            extensions, // optional\n            extras, // optional\n        }) => {\n            return {\n                primitives: this.parsePrimitives(gl, primitives, desc, bufferViews),\n                weights,\n                name,\n            };\n        });\n\n    }\n    \n    static parsePrimitives(gl, primitives, desc, bufferViews) {\n        return primitives.map(({\n            attributes, // required\n            indices, // optional\n            material, // optional\n            mode = 4, // optional\n            targets, // optional\n            // extensions, // optional\n            // extras, // optional\n        }) => {\n            const geometry = new Geometry(gl);\n\n            // Add each attribute found in primitive\n            for (const attr in attributes) {\n                geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n            }\n            \n            // Add index attribute if found\n            if (indices !== undefined) geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n\n            // TODO: materials\n            const program = new NormalProgram(gl);\n\n            return {\n                geometry,\n                program,\n                mode,\n            };\n        });\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            byteOffset: bufferViewByteOffset = 0,\n            byteLength,\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Return attribute data\n        return {\n            data, // Optional. Used for computing bounds if no min/max\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n    \n    static parseNodes(gl, desc, meshes) {\n\n        const nodes = desc.nodes.map(({\n            // Everything is optional\n            camera,\n            children,\n            skin,\n            matrix, \n            mesh: meshIndex,\n            rotation,\n            scale,\n            translation,\n            weights,\n            name,\n            extensions,\n            extras,\n        }) => {\n            const node = new Transform();\n            if (matrix) {\n                node.matrix.copy(matrix);\n                node.decompose();\n            } else {\n                if (rotation) node.quaternion.copy(rotation);\n                if (scale) node.scale.copy(scale);\n                if (translation) node.position.copy(translation);\n            }\n\n            if (meshIndex !== undefined) {\n                meshes[meshIndex].primitives.forEach(({geometry, program, mode}) => {\n                    const mesh = new Mesh(gl, {geometry, program, mode});\n                    mesh.setParent(node);\n                });\n            }\n\n            return node;\n        });\n\n        // Set hierarchy now all nodes created\n        desc.nodes.forEach(({children = []}, i) => {\n            children.forEach(childIndex => {\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        return nodes;\n    }\n\n    static parseScenes(desc, nodes) {\n        return desc.scenes.map(({\n            nodes: nodesIndices = [],\n            name,\n            extensions,\n            extras,\n        }) => {\n            return nodesIndices.map(i => nodes[i]);\n        });\n    }\n}\n\n","// Core\nexport {Geometry} from './core/Geometry.js';\nexport {Program} from './core/Program.js';\nexport {Renderer} from './core/Renderer.js';\nexport {Camera} from './core/Camera.js';\nexport {Transform} from './core/Transform.js';\nexport {Mesh} from './core/Mesh.js';\nexport {Texture} from './core/Texture.js';\nexport {RenderTarget} from './core/RenderTarget.js';\n\n// Maths\nexport {Color} from './math/Color.js';\nexport {Euler} from './math/Euler.js';\nexport {Mat3} from './math/Mat3.js';\nexport {Mat4} from './math/Mat4.js';\nexport {Quat} from './math/Quat.js';\nexport {Vec2} from './math/Vec2.js';\nexport {Vec3} from './math/Vec3.js';\nexport {Vec4} from './math/Vec4.js';\n\n// Extras\nexport {Plane} from './extras/Plane.js';\nexport {Box} from './extras/Box.js';\nexport {Sphere} from './extras/Sphere.js';\nexport {Cylinder} from './extras/Cylinder.js';\nexport {Triangle} from './extras/Triangle.js';\nexport {Orbit} from './extras/Orbit.js';\nexport {Raycast} from './extras/Raycast.js';\n// export {Curve} from './extras/Curve.js';\nexport {Post} from './extras/Post.js';\nexport {Skin} from './extras/Skin.js';\nexport {Animation} from './extras/Animation.js';\nexport {Text} from './extras/Text.js';\nexport {NormalProgram} from './extras/NormalProgram.js';\nexport {Flowmap} from './extras/Flowmap.js';\nexport {GPGPU} from './extras/GPGPU.js';\nexport {Polyline} from './extras/Polyline.js';\nexport {Shadow} from './extras/Shadow.js';\nexport {KTXTexture} from './extras/KTXTexture.js';\nexport {TextureLoader} from './extras/TextureLoader.js';\nexport {GLTFLoader} from './extras/GLTFLoader.js';\n","export const init = callback =>\n  document.addEventListener('DOMContentLoaded', callback);\n\nexport const shaderTaggedTemplateLiteral = (strings, ...exprs) =>\n  strings.reduce((acc, str, i) => acc.concat(str, exprs[i]), []).join('');\n\nexport const vert = shaderTaggedTemplateLiteral;\nexport const frag = shaderTaggedTemplateLiteral;\n","import {\n  Flowmap,\n  Geometry,\n  Mesh,\n  Program,\n  Renderer,\n  Texture,\n  Vec2,\n  Vec4\n} from 'ogl';\n\nimport { init, vert, frag } from './utils';\n\n(() => {\n  const vertexShader = vert`\n      attribute vec2 uv;\n      attribute vec2 position;\n      varying vec2 vUv;\n\n      void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0.0, 1.0);\n      }\n    `;\n\n  const fragmentShader = frag`\n      precision highp float;\n      precision highp int;\n\n      varying vec2 vUv;\n\n      uniform float uTime;\n      uniform vec2 uMouse;\n      uniform float uUseMouse;\n      uniform float uNoiseMultiplier;\n      uniform sampler2D uWater;\n      uniform sampler2D uFlow;\n      uniform vec4 res;\n\n      const float PI  = 3.141592653;\n      const float PHI = 1.618033988;\n\n      float gold_noise(in vec2 xy, in float seed) {\n        return fract(tan(distance(xy * PHI, xy) * seed) * xy.x);\n      }\n\n      float map(float value, float min1, float max1, float min2, float max2) {\n        return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n      }\n\n      void main() {\n        vec3 flow = texture2D(uFlow, vUv).rgb;\n        vec2 uv = 0.5 * gl_FragCoord.xy / res.xy ;\n\n        vec3 noise = vec3(gold_noise(uv.xy * res.xy + vec2(0.9, 0.0), mod(uTime, 1000.0)));\n        float progress = clamp(((uTime * 0.5) - 10.0) / 30.0, 0.0, 1.0);\n\n        vec2 offset = (uMouse - vec2(0.5)) * (0.1 * 0.05) * uUseMouse;\n        vec2 myUV = (uv - vec2(0.5)) * res.zw + vec2(0.5) + offset;\n\n        myUV -= flow.xy * (0.015 * 0.2) * (noise.xy * uNoiseMultiplier);\n\n        vec3 tex = texture2D(uWater, myUV).rgb;\n        vec3 flowTex = (vec3(0.02) + (tex.rgb * (0.75 + (3.0 * progress))) + (noise * 0.2)) *\n                       (vec3(0.2, 0.2, 0.4) + ((vec3(0.3) + tex.rgb) * flow * noise * 2.0));\n\n        gl_FragColor = vec4(clamp(flowTex, vec3(0.0), vec3(1.0)), tex.r);\n      }\n    `;\n\n  const I = {\n    default: document.querySelector('meta[name=\"app:svg:default\"]').getAttribute('content'),\n    touch: document.querySelector('meta[name=\"app:svg:touch\"]').getAttribute('content')\n  };\n\n  const S = {\n    isTouchCapable: 'ontouchstart' in window,\n    mouse: new Vec2(0.5),\n    velocity: new Vec2(),\n\n    previousTime: null,\n    previousMouse: new Vec2(),\n\n    aspect: 1,\n    image: {\n      url: '',\n      size: { x: 1600, y: 1200 }\n    },\n\n    renderer: null,\n    gl: null,\n    canvas: null,\n\n    flowmap: null,\n    geometry: null,\n    texture: null,\n    program: null,\n    mesh: null\n  };\n\n  const computeAspect = () => {\n    const imageAspect = S.image.size.y / S.image.size.x;\n    const windowAspect = {\n      h: window.innerHeight / window.innerWidth,\n      v: window.innerWidth / window.innerHeight\n    };\n\n    if (windowAspect.h < imageAspect) {\n      return { ah: 1, av: windowAspect.h / imageAspect };\n    }\n\n    return { ah: windowAspect.v * imageAspect, av: 1 };\n  };\n\n  const resize = () => {\n    const { ah, av } = computeAspect();\n\n    S.mesh.program.uniforms.res.value = new Vec4(\n      window.innerWidth,\n      window.innerHeight,\n      ah,\n      av\n    );\n\n    S.renderer.setSize(window.innerWidth, window.innerHeight);\n    S.aspect = window.innerWidth / window.innerHeight;\n  };\n\n  const updateMouse = event => {\n    const { changedTouches, pageX, pageY } = event;\n\n    // Do not prevent default as this blocks clicks on links on touch devices\n    // event.preventDefault();\n\n    const P = { x: event.x, y: event.y };\n\n    if (changedTouches && changedTouches.length) {\n      P.x = changedTouches[0].pageX;\n      P.y = changedTouches[0].pageY;\n    } else if (event.x === undefined) {\n      P.x = pageX;\n      P.y = pageY;\n    }\n\n    // Get mouse value in 0 to 1 range, with y flipped\n    S.mouse.set(P.x / S.gl.renderer.width, 1.0 - P.y / S.gl.renderer.height);\n\n    // Calculate velocity\n    if (!S.previousTime) {\n      // First frame\n      S.previousTime = window.performance.now();\n      S.previousMouse.set(P.x, P.y);\n    }\n\n    const deltaX = P.x - S.previousMouse.x;\n    const deltaY = P.y - S.previousMouse.y;\n\n    S.previousMouse.set(P.x, P.y);\n\n    const time = window.performance.now();\n\n    // Avoid dividing by 0\n    const delta = Math.max(10.4, time - S.previousTime);\n\n    S.previousTime = time;\n    S.velocity.x = deltaX / delta;\n    S.velocity.y = deltaY / delta;\n\n    // Flag update to prevent hanging velocity values when not moving\n    S.velocity.needsUpdate = true;\n  };\n\n  init(() => {\n    S.renderer = new Renderer({\n      dpr: 2,\n      alpha: true,\n      premultipliedAlpha: true\n    });\n\n    S.gl = S.renderer.gl;\n    S.canvas = S.gl.canvas;\n\n    S.canvas.setAttribute('id', 'scene');\n    document.body.appendChild(S.canvas);\n\n    S.flowmap = new Flowmap(S.gl, {\n      size: 512,\n      falloff: S.isTouchCapable ? 0.3 : 0.4,\n      dissipation: 0.95\n    });\n\n    S.geometry = new Geometry(S.gl, {\n      position: {\n        size: 2,\n        data: new Float32Array([-1, -1, 3, -1, -1, 3])\n      },\n      uv: {\n        size: 2,\n        data: new Float32Array([0, 0, 2, 0, 0, 2])\n      }\n    });\n\n    S.texture = new Texture(S.gl, {\n      minFilter: S.gl.LINEAR,\n      magFilter: S.gl.LINEAR,\n      premultiplyAlpha: true\n    });\n\n    const img = new Image();\n\n    img.addEventListener('load', () => (S.texture.image = img));\n\n    if (S.isTouchCapable) {\n      img.src = I.touch;\n    } else {\n      img.src = I.default;\n    }\n\n    const { ah, av } = computeAspect();\n\n    S.program = new Program(S.gl, {\n      vertex: vertexShader,\n      fragment: fragmentShader,\n      uniforms: {\n        uTime: { value: 0 },\n        uMouse: { value: S.mouse },\n        uUseMouse: { value: S.isTouchCapable ? 0.0 : 1.0 },\n        uNoiseMultiplier: { value: S.isTouchCapable ? 16.0 : 3.0 },\n        uWater: { value: S.texture },\n        uFlow: S.flowmap.uniform,\n        img: { value: new Vec2(S.image.size.x, S.image.size.y) },\n        res: {\n          value: new Vec4(window.innerWidth, window.innerHeight, ah, av)\n        }\n      }\n    });\n\n    S.mesh = new Mesh(S.gl, { geometry: S.geometry, program: S.program });\n\n    window.addEventListener('resize', resize, false);\n    resize();\n\n    if (S.isTouchCapable) {\n      window.addEventListener('touchstart', updateMouse, { passive: false });\n      window.addEventListener('touchmove', updateMouse, { passive: false });\n    } else {\n      window.addEventListener('mousemove', updateMouse, false);\n    }\n\n    const update = elapsed => {\n      requestAnimationFrame(update);\n\n      if (!S.velocity.needsUpdate) {\n        S.velocity.set(0);\n      }\n\n      S.velocity.needsUpdate = false;\n\n      S.flowmap.aspect = S.aspect;\n      S.flowmap.mouse.copy(S.mouse);\n      S.flowmap.velocity.lerp(S.velocity, S.velocity.len ? 0.15 : 0.1);\n      S.flowmap.update();\n\n      S.program.uniforms.uTime.value = elapsed * 0.01;\n\n      S.renderer.render({ scene: S.mesh });\n    };\n\n    requestAnimationFrame(update);\n  });\n})();\n"]}