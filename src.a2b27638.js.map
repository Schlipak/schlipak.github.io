{"version":3,"sources":["node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/core/Camera.js","node_modules/ogl/src/math/functions/Mat3Func.js","node_modules/ogl/src/math/Mat3.js","node_modules/ogl/src/core/Mesh.js","node_modules/ogl/src/core/Texture.js","node_modules/ogl/src/core/RenderTarget.js","node_modules/ogl/src/math/functions/ColorFunc.js","node_modules/ogl/src/math/Color.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","node_modules/ogl/src/math/Vec4.js","node_modules/ogl/src/extras/Plane.js","node_modules/ogl/src/extras/Box.js","node_modules/ogl/src/extras/Sphere.js","node_modules/ogl/src/extras/Cylinder.js","node_modules/ogl/src/extras/Triangle.js","node_modules/ogl/src/extras/Orbit.js","node_modules/ogl/src/extras/Raycast.js","node_modules/ogl/src/extras/Post.js","node_modules/ogl/src/extras/Animation.js","node_modules/ogl/src/extras/Skin.js","node_modules/ogl/src/extras/Text.js","node_modules/ogl/src/extras/NormalProgram.js","node_modules/ogl/src/extras/Flowmap.js","node_modules/ogl/src/extras/GPGPU.js","node_modules/ogl/src/extras/Polyline.js","node_modules/ogl/src/extras/Shadow.js","node_modules/ogl/src/extras/KTXTexture.js","node_modules/ogl/src/extras/TextureLoader.js","node_modules/ogl/src/extras/GLTFLoader.js","node_modules/ogl/src/index.mjs","src/utils.js","src/index.js","node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix4","mat4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","console","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPositionArray","position","computeBoundingBox","array","bounds","center","radius","Infinity","i","l","computeBoundingSphere","maxRadiusSq","remove","vao","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","undefined","texture","update","setUniform","textureUnits","push","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","canvas","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","hypot","c","b12","b20","b21","b22","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","toLowerCase","Color","isArray","ColorFunc","r","g","transformMat2","transformMat2d","Vec2","Vec2Func","applyMatrix3","mat3","Vec4","Vec4Func","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addHeight","addCap","slope","indexRow","theta","sinTheta","cosTheta","isTop","sign","centerIndex","Triangle","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","enableZoom","zoomSpeed","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","sinPhiRadius","rotateStart","panStart","dollyStart","mouseButtons","ORBIT","ZOOM","getZoomScale","pow","panLeft","panUp","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","dolly","dollyScale","handleMoveRotate","handleMouseMoveDolly","e","clientX","clientY","handleMovePan","handleTouchStartDollyPan","dx","touches","pageX","dy","pageY","handleTouchMoveDollyPan","onMouseDown","button","window","addEventListener","onMouseMove","onMouseUp","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","addHandlers","passive","tempVec3c","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","invWorldMat4","hits","raycast","localDistance","intersectSphere","intersectBox","hit","localPoint","point","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","Post","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","defaultVertex","defaultFragment","textureUniform","pass","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","floor","blend","prevKey","nextKey","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","log","LN2","boneMatrices","RGBA16F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","parseFont","createGeometry","chars","char","common","base","replace","numChars","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","pop","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","velocity","initProgram","HALF_FLOAT","HALF_FLOAT_OES","RGBA32F","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","tmp","Polyline","points","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","p","Shadow","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","error","BYTES_PER_ELEMENT","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","TextureLoader","load","support","getSupportedExtensions","ext","prop","includes","loaded","loadKTX","loadImage","pvrtc","s3tc","etc","etc1","astc","detectWebP","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","toDataURL","log2","Promise","resolve","img","Image","isChrome","navigator","userAgent","createImageBitmap","onload","imageOrientation","TYPE_ARRAY","Int16Array","TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","GLTFLoader","dir","desc","json","asset","version","loadBuffers","bufferViews","parseBufferViews","parseMeshes","nodes","parseNodes","scenes","parseScenes","resolveURI","uri","all","map","primitives","indices","accessors","bufferView","componentType","bufferIndex","byteOffset","byteLength","byteStride","extras","TypeArray","elementBytes","weights","parsePrimitives","material","targets","parseAccessor","bufferViewIndex","sparse","bufferViewByteOffset","skin","meshIndex","translation","childIndex","nodesIndices","init","shaderTaggedTemplateLiteral","strings","exprs","reduce","acc","str","vert","frag","I","default","querySelector","getAttribute","touch","isTouchCapable","previousTime","previousMouse","url","flowmap","computeAspect","imageAspect","windowAspect","innerHeight","innerWidth","ah","av","updateMouse","event","changedTouches","P","performance","now","time","delta","setAttribute","appendChild","uTime","uUseMouse","uNoiseMultiplier","uWater","uFlow","requestAnimationFrame","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","JSON","parse","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0], ay = a[1], az = a[2];\n    let bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0], y = a[1], z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0], y = a[1], z = a[2];\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n    \n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n    \n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    \n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    \n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function() {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function(a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        }\n        else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n    \n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        Vec3Func.cross(this, va, vb);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\tthis[2] = a[o + 2];\n\t\treturn this;\n    }\n\n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\ta[o + 2] = this[2];\n\t\treturn a;\n\t}\n    \n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n        \n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: add fallback for non vao support (ie)\n\nimport {Vec3} from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = {start: 0, count: 0};\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type = attr.type || (\n            attr.data.constructor === Float32Array ? this.gl.FLOAT : \n            attr.data.constructor === Uint16Array ? this.gl.UNSIGNED_SHORT : \n            this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || attr.data.length / attr.size;\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor);\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, name) => {\n\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n            this.gl.vertexAttribPointer(\n                location,\n                attr.size,\n                attr.type,\n                attr.normalized,\n                attr.stride,\n                attr.offset\n            );\n            this.gl.enableVertexAttribArray(location);\n\n            // For instanced attributes, divisor needs to be set.\n            // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n            this.gl.renderer.vertexAttribDivisor(location, attr.divisor);\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({\n        program,\n        mode = this.gl.TRIANGLES,\n    }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {   \n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, name) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(mode, this.drawRange.count, this.attributes.index.type, this.drawRange.start, this.instancedCount);\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPositionArray() {\n\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr.data;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return isBoundsWarned = true;\n    }\n\n    computeBoundingBox(array) {\n        if (!array) array = this.getPositionArray();\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: use offset/stride if exists\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(array) {\n        if (!array) array = this.getPositionArray();\n        if (!this.bounds) this.computeBoundingBox(array);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += 3) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        if (this.vao) this.gl.renderer.deleteVertexArray(this.vao);\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(gl, {\n        vertex,\n        fragment,\n        uniforms = {},\n\n        transparent = false,\n        cullFace = gl.BACK,\n        frontFace = gl.CCW,\n        depthTest = true,\n        depthWrite = true,\n        depthFunc = gl.LESS,\n    } = {}) {\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n            \n            uniform.uniformName = split[0];\n            \n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = []; \n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute.name, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src) this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        if (this.blendEquation.modeRGB) this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({\n        flipFaces = false,\n    } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n                \n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach(value => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n                \n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined) {\n\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126  : return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664 : return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665 : return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666 : return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670 : // BOOL\n        case 5124  : // INT\n        case 35678 : // SAMPLER_2D\n        case 35680 : return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671 : // BOOL_VEC2\n        case 35667 : return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672 : // BOOL_VEC3\n        case 35668 : return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673 : // BOOL_VEC4\n        case 35669 : return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674 : return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675 : return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676 : return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i ++) {\n        lines[i] = (i + 1) + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n\tif (a.length !== b.length) return false;\n\tfor (let i = 0, l = a.length; i < l; i ++) {\n\t\tif (a[i] !== b[i]) return false;\n\t}\n\treturn true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i ++) {\n\t\ta[i] = b[i];\n\t}\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}","import {Vec3} from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = {alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference};\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) {\n            this.gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n        }\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = {src: this.gl.ONE, dst: this.gl.ZERO};\n        this.state.blendEquation = {modeRGB: this.gl.FUNC_ADD};\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = {width: null, height: null};\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n        \n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        \n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic') ? \n            this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;\n\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha) return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        if (this.state.blendEquation.modeRGB === modeRGB &&\n            this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({target = this.gl.FRAMEBUFFER, buffer = null} = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({scene, camera, frustumCull, sort}) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse(node => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach(node => {\n\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({\n        scene,\n        camera,\n        target = null,\n        update = true,\n        sort = true,\n        frustumCull = true,\n        clear,\n    }) {\n\n        if (target === null) {\n\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear((this.color ? this.gl.COLOR_BUFFER_BIT : 0) | (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) | (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0));\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({scene, camera, frustumCull, sort});\n\n        renderList.forEach(node => {\n            node.draw({camera});\n        });\n    }\n}","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if ((1.0 - cosom) > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;  // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0])\n            i = 1;\n        if (m[8] > m[i * 3 + i])\n            i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\tthis[2] = a[o + 2];\n\t\tthis[3] = a[o + 3];\n\t\treturn this;\n    }\n    \n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\ta[o + 2] = this[2];\n\t\ta[o + 3] = this[3];\n\t\treturn a;\n\t}\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1], a02 = a[2], a03 = a[3];\n        let a12 = a[6], a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0], y = v[1], z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0], y = axis[1], z = axis[2];\n    let len = Math.hypot(x,y,z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function() {\n    const temp = [0, 0, 0];\n\n    return function(out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n    \n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n    \n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n    \n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n    \n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if ((sm11 > sm22) && (sm11 > sm33)) {\n            S = Math.sqrt(1.0 + sm11 - sm22- sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n    \n        return out;\n    }\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0], y = q[1], z = q[2], w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0], y = q[1], z = q[2], w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1, m01 = 0, m02 = 0, m03 = 0, \n        m10 = 0, m11 = 1, m12 = 0, m13 = 0, \n        m20 = 0, m21 = 0, m22 = 1, m23 = 0, \n        m30 = 0, m31 = 0, m32 = 0, m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    \n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(out, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === \"number\" ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({fov, aspect, near, far} = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({left, right, bottom, top, near, far}) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n}\n","\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport {Mat4} from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n}","import {Vec3} from '../math/Vec3.js';\nimport {Quat} from '../math/Quat.js';\nimport {Mat4} from '../math/Mat4.js';\nimport {Euler} from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (notifyParent && this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i ++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i ++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    };\n}","import {Transform} from './Transform.js';\nimport {Mat4} from '../math/Mat4.js';\nimport {Vec3} from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, {\n        near = 0.1,\n        far = 100,\n        fov = 45,\n        aspect = 1,\n        left,\n        right,\n        bottom,\n        top,\n        zoom = 1,\n    } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n        \n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({\n        near = this.near,\n        far = this.far,\n        fov = this.fov,\n        aspect = this.aspect,\n    } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({fov: fov * (Math.PI / 180), aspect, near, far});\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({left, right, bottom, top, near, far});\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n        \n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n        \n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n\t\tfor (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n\t\t\tif (distance < -radius) return false;\n\t\t}\n\t\treturn true;\n    }\n}","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0], y = q[1], z = q[2], w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2];\n    let a10 = a[3], a11 = a[4], a12 = a[5];\n    let a20 = a[6], a21 = a[7], a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2];\n    let a10 = a[3], a11 = a[4], a12 = a[5];\n    let a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0], a01 = a[1], a02 = a[2];\n    let a10 = a[3], a11 = a[4], a12 = a[5];\n    let a20 = a[6], a21 = a[7], a22 = a[8];\n\n    let b00 = b[0], b01 = b[1], b02 = b[2];\n    let b10 = b[3], b11 = b[4], b12 = b[5];\n    let b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(\n        m00 = 1, m01 = 0, m02 = 0, \n        m10 = 0, m11 = 1, m12 = 0, \n        m20 = 0, m21 = 0, m22 = 1\n    ) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(\n            vec3a[0],\n            vec3a[1],\n            vec3a[2],\n            vec3b[0],\n            vec3b[1],\n            vec3b[2],\n            vec3c[0],\n            vec3c[1],\n            vec3c[2]\n        );\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import {Transform} from './Transform.js';\nimport {Mat3} from '../math/Mat3.js';\nimport {Mat4} from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, {\n        geometry,\n        program,\n        mode = gl.TRIANGLES,\n        frustumCulled = true,\n        renderOrder = 0,\n    } = {}) {\n        super();\n        this.gl = gl;\n        this.id = ID++;\n\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({\n        camera,\n    } = {}) {\n        this.beforeRenderCallbacks.forEach(f => f && f({mesh: this, camera}));\n\n        // Set the matrix uniforms\n        if (camera) {\n\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: {value: null},\n                    viewMatrix: {value: null},\n                    modelViewMatrix: {value: null},\n                    normalMatrix: {value: null},\n                    projectionMatrix: {value: null},\n                    cameraPosition: {value: null},\n                });\n            }\n\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n\n        this.program.use({flipFaces});\n        this.geometry.draw({mode: this.mode, program: this.program});\n\n        this.afterRenderCallbacks.forEach(f => f && f({mesh: this, camera}));\n    }\n}","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(gl, {\n        image,\n        target = gl.TEXTURE_2D,\n        type = gl.UNSIGNED_BYTE,\n        format = gl.RGBA,\n        internalFormat = format,\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        generateMipmaps = true,\n        minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n        magFilter = gl.LINEAR,\n        premultiplyAlpha = false,\n        unpackAlignment = 4,\n        flipY = target == gl.TEXTURE_2D ? true : false,\n        anisotropy = 0,\n        level = 0,\n        width, // used for RenderTargets or Data Textures\n        height = width,\n    } = {}) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n        \n        this.store = {\n            image: null,\n        };\n        \n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(this.target, this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropy);\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n            \n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, this.level, this.internalFormat, this.format, this.type, this.image[i]);\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(this.target, level, this.internalFormat, this.image[level].width, this.image[level].height, 0, this.image[level].data);\n                }\n            } else {\n                \n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n                }\n            } else if (this.width) {\n\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}","// TODO: multi target rendering\n// TODO: test stencil and depth\n// TODO: destroy\n// TODO: blit on resize?\nimport {Texture} from './Texture.js';\n\nexport class RenderTarget {\n    constructor(gl, {\n        width = gl.canvas.width,\n        height = gl.canvas.height,\n        target = gl.FRAMEBUFFER,\n        color = 1, // number of color attachments\n        depth = true,\n        stencil = false,\n        depthTexture = false, // note - stencil breaks\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        minFilter = gl.LINEAR,\n        magFilter = minFilter,\n        type = gl.UNSIGNED_BYTE,\n        format = gl.RGBA,\n        internalFormat = format,\n        unpackAlignment,\n        premultiplyAlpha,\n    } = {}) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(new Texture(gl, {\n                width, height, \n                wrapS, wrapT, minFilter, magFilter, type, format, internalFormat, unpackAlignment, premultiplyAlpha,\n                flipY: false,\n                generateMipmaps: false,\n            }));\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width, height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n\n}","const NAMES\t= {\n    \"black\" : \"#000000\",\n    \"white\" : \"#ffffff\",\n    \"red\" : \"#ff0000\",\n    \"green\" : \"#00ff00\",\n    \"blue\" : \"#0000ff\",\n    \"fuchsia\" : \"#ff00ff\",\n    \"cyan\" : \"#00ffff\",\n    \"yellow\" : \"#ffff00\",\n    \"orange\" : \"#ff8000\",\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [\n        parseInt(rgb[1], 16) / 255,\n        parseInt(rgb[2], 16) / 255,\n        parseInt(rgb[3], 16) / 255\n    ];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [\n        (num >> 16 & 255) / 255,\n        (num >> 8 & 255) / 255,\n        (num & 255) / 255,\n    ]\n}\n\nexport function parseColor(color) {\n    \n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n        \n    // Hex\n    if (color[0] === \"#\") return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n    \n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        return Vec2Func.cross(va, vb);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\treturn this;\n    }\n    \n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\treturn a;\n\t}\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n\t\tthis[0] = a[o];\n\t\tthis[1] = a[o + 1];\n\t\tthis[2] = a[o + 2];\n\t\tthis[3] = a[o + 3];\n\t\treturn this;\n    }\n    \n\ttoArray(a = [], o = 0) {\n\t\ta[o] = this[0];\n\t\ta[o + 1] = this[1];\n\t\ta[o + 2] = this[2];\n\t\ta[o + 3] = this[3];\n\t\treturn a;\n\t}\n}\n","import {Geometry} from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, {\n        width = 1, \n        height = 1, \n        widthSegments = 1, \n        heightSegments = 1,\n        attributes = {},\n    } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = (num > 65536) ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        }); \n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs,\n        u = 0, v = 1, w = 2,\n        uDir = 1, vDir = -1,\n        i = 0, ii = 0\n    ) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}","import {Geometry} from '../core/Geometry.js';\nimport {Plane} from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, {\n        width = 1, \n        height = 1, \n        depth = 1, \n        widthSegments = 1, \n        heightSegments = 1,\n        depthSegments = 1,\n        attributes = {},\n    } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = (num > 65536) ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height,  width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0,  1, -1, i += (dSegs + 1) * (hSegs + 1), ii += dSegs * hSegs);\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth,  height, dSegs, hSegs, 0, 2, 1,  1,  1, i += (dSegs + 1) * (hSegs + 1), ii += dSegs * hSegs);\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, hSegs, 0, 2, 1,  1, -1, i += (wSegs + 1) * (dSegs + 1), ii += wSegs * dSegs);\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i += (wSegs + 1) * (dSegs + 1), ii += wSegs * dSegs);\n        Plane.buildPlane(position, normal, uv, index, width, height,  depth, wSegs, hSegs, 0, 1, 2,  1, -1, i += (wSegs + 1) * (hSegs + 1), ii += wSegs * hSegs);\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        }); \n\n        super(gl, attributes);\n    }\n}","import {Geometry} from '../core/Geometry.js';\nimport {Vec3} from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(gl, {\n        radius = 0.5, \n        widthSegments = 16, \n        heightSegments = Math.ceil(widthSegments * 0.5), \n        phiStart = 0, \n        phiLength = Math.PI * 2, \n        thetaStart = 0, \n        thetaLength = Math.PI,\n        attributes = {},\n    } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6 ;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = (num > 65536) ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3]     = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3]     = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2]     = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3]     = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3]     = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        }); \n\n        super(gl, attributes);\n    }\n}","import {Geometry} from '../core/Geometry.js';\nimport {Vec3} from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(gl, {\n        radiusTop = 0.5,\n        radiusBottom = 0.5,\n        height = 1,\n        radialSegments = 8,\n        heightSegments = 1,\n        openEnded = false,\n        thetaStart = 0,\n        thetaLength = Math.PI * 2,\n        attributes = {},\n    } = {}) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3)\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: {size: 3, data: position},\n            normal: {size: 3, data: normal},\n            uv: {size: 2, data: uv},\n            index: {data: index},\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { \n        attributes = {},\n    } = {}) {\n\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        }); \n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n\nimport {Vec3} from '../math/Vec3.js';\nimport {Vec2} from '../math/Vec2.js';\n\nconst STATE = {NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3};\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(object, {\n    element = document,\n    enabled = true,\n    target = new Vec3(),\n    ease = 0.25,\n    inertia = 0.85,\n    enableRotate = true,\n    rotateSpeed = 0.1,\n    enableZoom = true,\n    zoomSpeed = 1,\n    enablePan = true,\n    panSpeed = 0.1,\n    minPolarAngle = 0,\n    maxPolarAngle = Math.PI,\n    minAzimuthAngle = -Infinity,\n    maxAzimuthAngle = Infinity,\n    minDistance = 0,\n    maxDistance = Infinity,\n} = {}) {\n    this.enabled = enabled;\n    this.target = target;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 1;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = {radius: 1, phi: 0, theta: 0};\n    const sphericalTarget = {radius: 1, phi: 0, theta: 0};\n    const spherical = {radius: 1, phi: 0, theta: 0};\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.update = () => {\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = {ORBIT: 0, ZOOM: 1, PAN: 2};\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan(((object.fov || 45) / 2) * Math.PI / 180.0);\n        panLeft(2 * deltaX * targetDistance / el.clientHeight, object.matrix);\n        panUp(2 * deltaY * targetDistance / el.clientHeight, object.matrix);\n    };\n\n    function dolly(dollyScale) {\n        sphericalDelta.radius /= dollyScale;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= 2 * Math.PI * tempVec2b.x / el.clientHeight;\n        sphericalDelta.phi -= 2 * Math.PI * tempVec2b.y / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        if (!this.enabled) return;\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, {passive: false});\n        element.addEventListener('touchstart', onTouchStart, {passive: false});\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, {passive: false});\n    }\n\n    this.remove = function() {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}","// TODO: add barycentric ?\n\nimport {Vec3} from '../math/Vec3.js';\nimport {Mat4} from '../math/Mat4.js';\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor(gl) {\n        this.gl = gl;\n\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const {left, right, bottom, top, zoom} = camera;\n            const x = left / zoom + (right - left) / zoom * (mouse[0] * .5 + .5);\n            const y = bottom / zoom + (top - bottom) / zoom * (mouse[1] * .5 + .5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = [];\n\n        meshes.forEach(mesh => {\n\n            // Create bounds\n            if (!mesh.geometry.bounds) mesh.geometry.computeBoundingBox();\n            if (mesh.geometry.raycast === 'sphere' && mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n\n            // Take world space ray and make it object space to align with bounding box\n            invWorldMat4.inverse(mesh.worldMatrix);\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            if (mesh.geometry.raycast === 'sphere') {\n                localDistance = this.intersectSphere(mesh.geometry.bounds, origin, direction);\n            } else {\n                localDistance = this.intersectBox(mesh.geometry.bounds, origin, direction);\n            }\n            if (!localDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = {localPoint: new Vec3(), point: new Vec3()};\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n\n        if (d2 > radius2) return 0;\n\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n\n        if (t0 < 0 && t1 < 0) return 0;\n\n        if (t0 < 0) return t1;\n\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n    \n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n    \n        const min = box.min;\n        const max = box.max;\n\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n    \n        if ((tmin > tYmax) || (tYmin > tmax)) return 0;\n    \n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n    \n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n    \n        if ((tmin > tZmax) || (tZmin > tmax)) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n    \n        if (tmax < 0) return 0;\n\n        return tmin >= 0 ? tmin : tmax;\n    }\n}\n\n\n\n","// TODO: Destroy render targets if size changed and exists\n\nimport {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {RenderTarget} from '../core/RenderTarget.js';\nimport {Triangle} from './Triangle.js';\n\nexport class Post {\n    constructor(gl, {\n        width,\n        height,\n        dpr,\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        minFilter = gl.LINEAR,\n        magFilter = gl.LINEAR,\n        geometry = new Triangle(gl),\n        targetOnly = null,\n    } = {}) {\n        this.gl = gl;\n\n        this.options = {wrapS, wrapT, minFilter, magFilter};\n\n        this.passes = [];\n\n        this.geometry = geometry;   \n\n        this.uniform = {value: null};\n        this.targetOnly = targetOnly;\n\n        const fbo = this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        };\n\n        this.resize({width, height, dpr});\n    }\n\n    addPass({\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniforms = {},\n        textureUniform = 'tMap',\n        enabled = true,\n    } = {}) {\n        uniforms[textureUniform] = {value: this.fbo.read.texture};\n\n        const program = new Program(this.gl, {vertex, fragment, uniforms});\n        const mesh = new Mesh(this.gl, {geometry: this.geometry, program});\n\n        const pass = {\n            mesh, \n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({width, height, dpr} = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = (this.width || this.gl.renderer.width) * dpr;\n        height = (this.height || this.gl.renderer.height) * dpr;\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render\n    render({\n        scene,\n        camera,\n        target = null,\n        update = true,\n        sort = true,\n        frustumCull = true,\n    }) {\n        const enabledPasses = this.passes.filter(pass => pass.enabled);\n        \n        this.gl.renderer.render({\n            scene, camera,\n            target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n            update, sort, frustumCull,\n        });\n        this.fbo.swap();\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh, \n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: i === enabledPasses.length - 1 ? true : false,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import {Vec3} from '../math/Vec3.js';\nimport {Quat} from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({objects, data}) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3)\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}","import {Mesh} from '../core/Mesh.js';\nimport {Transform} from '../core/Transform.js';\nimport {Mat4} from '../math/Mat4.js';\nimport {Texture} from '../core/Texture.js';\nimport {Animation} from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, {\n        rig,\n        geometry,\n        program,\n        mode = gl.TRIANGLES,\n    } = {}) {\n        super(gl, {geometry, program, mode});\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: {value: this.boneTexture},\n            boneTextureSize: {value: this.boneTextureSize},\n        });\n    }\n\n    createBones(rig) {\n\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n        \n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3)\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        };\n        \n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach(bone => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA16F : this.gl.RGBA,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({objects: this.bones, data});\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach(animation => total += animation.weight);\n\n        this.animations.forEach((animation, i) => {\n\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({\n        camera,\n    } = {}) {\n\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({camera});\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach(d => glyphs[d.char] = d);\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([\n                    x,     y - h, 0,\n                    x,     y,     0,\n                    x + w, y - h, 0,\n                    x + w, y,     0\n                ], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([\n                    u,      v - vh,\n                    u,      v,\n                    u + uw, v - vh,\n                    u + uw, v,\n                ], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function(options) {\n        ({width} = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function(options) {\n        ({text} = options);\n        createGeometry()\n    };\n}\n\n","import {Program} from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}","import {RenderTarget} from '../core/RenderTarget.js';\nimport {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {Vec2} from '../math/Vec2.js';\nimport {Triangle} from './Triangle.js';\n\nexport class Flowmap {\n    constructor(gl, {\n        size = 128, // default size of the render targets\n        falloff = 0.3, // size of the stamp, percentage of the size\n        alpha = 1, // opacity of the stamp\n        dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n        type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n    } = {}) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = {value: null};\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        }\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size, \n                height: size, \n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 \n                    ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) \n                    : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: {value: falloff * 0.5},\n                        uAlpha: {value: alpha},\n                        uDissipation: {value: dissipation},\n\n                        // User needs to update these\n                        uAspect: {value: 1},\n                        uMouse: {value: _this.mouse},\n                        uVelocity: {value: _this.velocity},\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;","import {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {Texture} from '../core/Texture.js';\nimport {RenderTarget} from '../core/RenderTarget.js';\nimport {Triangle} from './Triangle.js';\n\nexport class GPGPU {\n    constructor(gl, {\n\n        // Always pass in array of vec4s (RGBA values within texture)\n        data = new Float32Array(16),\n\n        geometry = new Triangle(gl),\n        type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n    }) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {value: new Texture(gl, {\n            image: floatArray,\n            target: gl.TEXTURE_2D,\n            type: gl.FLOAT,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n            wrapS: gl.CLAMP_TO_EDGE,\n            wrapT: gl.CLAMP_TO_EDGE,\n            generateMipmaps: false,\n            minFilter: gl.NEAREST,\n            magFilter: gl.NEAREST,\n            width: this.size,\n            flipY: false,\n        })};\n\n        // Create FBOs\n        const options = {\n            width: this.size, \n            height: this.size, \n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 \n                ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) \n                : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniforms = {},\n        textureUniform = 'tMap',\n        enabled = true,\n    } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, {vertex, fragment, uniforms});\n        const mesh = new Mesh(this.gl, {geometry: this.geometry, program});\n\n        const pass = {\n            mesh, \n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter(pass => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh, \n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n};\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;","import {Geometry} from '../core/Geometry.js';\nimport {Program} from '../core/Program.js';\nimport {Mesh} from '../core/Mesh.js';\nimport {Vec2} from '../math/Vec2.js';\nimport {Vec3} from '../math/Vec3.js';\nimport {Color} from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(gl, {\n        points, // Array of Vec3s\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniforms = {},\n        attributes = {}, // For passing in custom attribs\n    }) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = this.geometry = new Geometry(gl, Object.assign(attributes, {\n            position: {size: 3, data: this.position},\n            prev: {size: 3, data: this.prev},\n            next: {size: 3, data: this.next},\n            side: {size: 1, data: side},\n            uv: {size: 2, data: uv},\n            index: {size: 1, data: index},\n        }));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = {value: new Vec2()};\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = {value: 1};\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = {value: 1};\n        if (!uniforms.uColor) this.color = uniforms.uColor = {value: new Color('#000')};\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = {value: 1};\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        });\n        \n        this.mesh = new Mesh(gl, {geometry, program});\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p).sub(this.points[i + 1]).add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p).sub(this.points[i - 1]).add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n};\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n\n\n\n\n","import {Camera} from '../core/Camera.js';\nimport {Program} from '../core/Program.js';\nimport {RenderTarget} from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, {\n        light = new Camera(gl),\n        width = 1024,\n        height = width,\n    }) {\n        this.gl = gl;\n\n        this.light = light;\n        \n        this.target = new RenderTarget(gl, {width, height});\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = {value: this.light.projectionMatrix};\n            mesh.program.uniforms[uniformView] = {value: this.light.viewMatrix};\n            mesh.program.uniforms[uniformTexture] = {value: this.target.texture};\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({scene}) {\n\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse(node => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                if (node.visible) node.isForceVisibility = true;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene, \n            camera: this.light, \n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse(node => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                if (node.isForceVisibility) node.visible = true;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, {\n        buffer,\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        anisotropy = 0,\n    } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n        \n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        this.minFilter = ktx.numberOfMipmapLevels > 1 ? this.gl.NEAREST_MIPMAP_LINEAR : this.gl.LINEAR;\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n};\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++)\n        if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// TODO: store cache with arguments\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nconst cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(gl, {\n        src, // string or object of extension:src key-values\n        // {\n        //     pvrtc: '...ktx',\n        //     s3tc: '...ktx',\n        //     etc: '...ktx',\n        //     etc1: '...ktx',\n        //     astc: '...ktx',\n        //     webp: '...webp',\n        //     jpg: '...jpg',\n        //     png: '...png',\n        // }\n\n        // Only props relevant to KTXTexture\n        wrapS = gl.CLAMP_TO_EDGE,\n        wrapT = gl.CLAMP_TO_EDGE,\n        anisotropy = 0,\n\n        // For regular images\n        format = gl.RGBA,\n        internalFormat = format,\n        generateMipmaps = true,\n        minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n        magFilter = gl.LINEAR,\n        premultiplyAlpha = false,\n        unpackAlignment = 4,\n        flipY = true,\n    } = {}) {\n        const support = this.getSupportedExtensions(gl);\n\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src\n                .split('.')\n                .pop()\n                .split('?')[0]\n                .toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                \n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n\n        // TODO: store in cache\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') \n                || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'), \n            s3tc: gl.renderer.getExtension('WEBGL_compressed_texture_s3tc')\n                || gl.renderer.getExtension('MOZ_WEBGL_compressed_texture_s3tc')\n                || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'),\n            etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then(res => res.arrayBuffer())\n            .then(buffer => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture) {\n        return decodeImage(src).then(imgBmp => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n        });\n    }\n}\n\nfunction detectWebP() {\n    return (\n        document\n            .createElement('canvas')\n            .toDataURL('image/webp')\n            .indexOf('data:image/webp') == 0\n    );\n}\n\nfunction powerOfTwo(value) {\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src) {\n    return new Promise(resolve => {\n        const img = new Image();\n        img.src = src;\n\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            img.onload = () => {\n                createImageBitmap(img, {\n                    imageOrientation: 'flipY',\n                    premultiplyAlpha: 'none',\n                }).then(imgBmp => {\n                    resolve(imgBmp);\n                });\n            };\n        } else {\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { NormalProgram } from './NormalProgram.js';\n\n// Supports\n// [x] Geometry\n// [x] Nodes and Hierarchy\n// [ ] Morph Targets\n// [ ] Skins\n// [ ] Materials\n// [ ] Textures\n// [ ] Animation\n// [ ] Cameras\n// [ ] Extensions\n\n// TODO: only push attribute bufferViews to the GPU\n// TODO: Sparse accessor packing? what for?\n// TODO: init accessor missing bufferView with 0s\n// TODO: is there ever more than one component type per buffer view? surely not...\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nexport class GLTFLoader {\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await fetch(src).then(res => res.json());\n\n        if (desc.asset === undefined || desc.asset.version[0] < 2) \n            console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            meshes,\n            nodes,\n            scenes,\n            scene,\n        };\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n        }\n\n        // Absolute URI http://, https://, //\n        if ( /^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static async loadBuffers(desc, dir) {\n        return await Promise.all(desc.buffers.map(buffer => {\n            const uri = this.resolveURI(buffer.uri, dir);\n            return fetch(uri).then(res => res.arrayBuffer());\n        }));\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        \n        // Clone to leave desc pure\n        const bufferViews = desc.bufferViews.map(o => Object.assign({}, o));\n\n        // Work out which bufferViews are for indices to determine whether\n        // target is gl.ELEMENT_ARRAY_BUFFER or gl.ARRAY_BUFFER;\n        desc.meshes.forEach(({primitives}) => {\n            primitives.forEach(({indices}) => {\n                if (indices === undefined) return;\n                bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n            });\n        })\n        \n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({bufferView: i, componentType}) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Push each bufferView to the GPU as a separate buffer\n        // TODO: only push attribute bufferViews to the GPU\n        bufferViews.forEach(({\n            buffer: bufferIndex, // required\n            byteOffset = 0, // optional\n            byteLength, // required\n            byteStride, // optional\n            target = gl.ARRAY_BUFFER, // optional, added above for elements\n            name, // optional\n            extensions, // optional\n            extras, // optional\n\n            componentType, // required, added from accessor above\n        }, i) => {\n            const TypeArray = TYPE_ARRAY[componentType];\n            const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n\n            // Create gl buffers for the bufferView, pushing it to the GPU\n            const data = new TypeArray(buffers[bufferIndex], byteOffset, byteLength / elementBytes);\n            const buffer = gl.createBuffer();\n            gl.bindBuffer(target, buffer);\n            gl.renderer.state.boundBuffer = buffer;\n            gl.bufferData(target, data, gl.STATIC_DRAW);\n\n            bufferViews[i].buffer = buffer;\n            bufferViews[i].data = data;\n        });\n\n        return bufferViews;\n    }\n\n    static parseMeshes(gl, desc, bufferViews) {\n        return desc.meshes.map(({\n            primitives, // required\n            weights, // optional\n            name, // optional\n            extensions, // optional\n            extras, // optional\n        }) => {\n            return {\n                primitives: this.parsePrimitives(gl, primitives, desc, bufferViews),\n                weights,\n                name,\n            };\n        });\n\n    }\n    \n    static parsePrimitives(gl, primitives, desc, bufferViews) {\n        return primitives.map(({\n            attributes, // required\n            indices, // optional\n            material, // optional\n            mode = 4, // optional\n            targets, // optional\n            // extensions, // optional\n            // extras, // optional\n        }) => {\n            const geometry = new Geometry(gl);\n\n            // Add each attribute found in primitive\n            for (const attr in attributes) {\n                geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n            }\n            \n            // Add index attribute if found\n            if (indices !== undefined) geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n\n            // TODO: materials\n            const program = new NormalProgram(gl);\n\n            return {\n                geometry,\n                program,\n                mode,\n            };\n        });\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            byteOffset: bufferViewByteOffset = 0,\n            byteLength,\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Return attribute data\n        return {\n            data, // Optional. Used for computing bounds if no min/max\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n    \n    static parseNodes(gl, desc, meshes) {\n\n        const nodes = desc.nodes.map(({\n            // Everything is optional\n            camera,\n            children,\n            skin,\n            matrix, \n            mesh: meshIndex,\n            rotation,\n            scale,\n            translation,\n            weights,\n            name,\n            extensions,\n            extras,\n        }) => {\n            const node = new Transform();\n            if (matrix) {\n                node.matrix.copy(matrix);\n                node.decompose();\n            } else {\n                if (rotation) node.quaternion.copy(rotation);\n                if (scale) node.scale.copy(scale);\n                if (translation) node.position.copy(translation);\n            }\n\n            if (meshIndex !== undefined) {\n                meshes[meshIndex].primitives.forEach(({geometry, program, mode}) => {\n                    const mesh = new Mesh(gl, {geometry, program, mode});\n                    mesh.setParent(node);\n                });\n            }\n\n            return node;\n        });\n\n        // Set hierarchy now all nodes created\n        desc.nodes.forEach(({children = []}, i) => {\n            children.forEach(childIndex => {\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        return nodes;\n    }\n\n    static parseScenes(desc, nodes) {\n        return desc.scenes.map(({\n            nodes: nodesIndices = [],\n            name,\n            extensions,\n            extras,\n        }) => {\n            return nodesIndices.map(i => nodes[i]);\n        });\n    }\n}\n\n","// Core\nexport {Geometry} from './core/Geometry.js';\nexport {Program} from './core/Program.js';\nexport {Renderer} from './core/Renderer.js';\nexport {Camera} from './core/Camera.js';\nexport {Transform} from './core/Transform.js';\nexport {Mesh} from './core/Mesh.js';\nexport {Texture} from './core/Texture.js';\nexport {RenderTarget} from './core/RenderTarget.js';\n\n// Maths\nexport {Color} from './math/Color.js';\nexport {Euler} from './math/Euler.js';\nexport {Mat3} from './math/Mat3.js';\nexport {Mat4} from './math/Mat4.js';\nexport {Quat} from './math/Quat.js';\nexport {Vec2} from './math/Vec2.js';\nexport {Vec3} from './math/Vec3.js';\nexport {Vec4} from './math/Vec4.js';\n\n// Extras\nexport {Plane} from './extras/Plane.js';\nexport {Box} from './extras/Box.js';\nexport {Sphere} from './extras/Sphere.js';\nexport {Cylinder} from './extras/Cylinder.js';\nexport {Triangle} from './extras/Triangle.js';\nexport {Orbit} from './extras/Orbit.js';\nexport {Raycast} from './extras/Raycast.js';\n// export {Curve} from './extras/Curve.js';\nexport {Post} from './extras/Post.js';\nexport {Skin} from './extras/Skin.js';\nexport {Animation} from './extras/Animation.js';\nexport {Text} from './extras/Text.js';\nexport {NormalProgram} from './extras/NormalProgram.js';\nexport {Flowmap} from './extras/Flowmap.js';\nexport {GPGPU} from './extras/GPGPU.js';\nexport {Polyline} from './extras/Polyline.js';\nexport {Shadow} from './extras/Shadow.js';\nexport {KTXTexture} from './extras/KTXTexture.js';\nexport {TextureLoader} from './extras/TextureLoader.js';\nexport {GLTFLoader} from './extras/GLTFLoader.js';\n","export const init = callback =>\n  document.addEventListener('DOMContentLoaded', callback);\n\nexport const shaderTaggedTemplateLiteral = (strings, ...exprs) =>\n  strings.reduce((acc, str, i) => acc.concat(str, exprs[i]), []).join('');\n\nexport const vert = shaderTaggedTemplateLiteral;\nexport const frag = shaderTaggedTemplateLiteral;\n","import {\n  Flowmap,\n  Geometry,\n  Mesh,\n  Program,\n  Renderer,\n  Texture,\n  Vec2,\n  Vec4\n} from 'ogl';\n\nimport { init, vert, frag } from './utils';\n\n(() => {\n  const vertexShader = vert`\n      attribute vec2 uv;\n      attribute vec2 position;\n      varying vec2 vUv;\n\n      void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0.0, 1.0);\n      }\n    `;\n\n  const fragmentShader = frag`\n      precision highp float;\n      precision highp int;\n\n      varying vec2 vUv;\n\n      uniform float uTime;\n      uniform vec2 uMouse;\n      uniform float uUseMouse;\n      uniform float uNoiseMultiplier;\n      uniform sampler2D uWater;\n      uniform sampler2D uFlow;\n      uniform vec4 res;\n\n      const float PI  = 3.141592653;\n      const float PHI = 1.618033988;\n\n      float gold_noise(in vec2 xy, in float seed) {\n        return fract(tan(distance(xy * PHI, xy) * seed) * xy.x);\n      }\n\n      void main() {\n        vec3 flow = texture2D(uFlow, vUv).rgb;\n        vec2 uv = 0.5 * gl_FragCoord.xy / res.xy ;\n\n        vec3 noise = vec3(gold_noise(uv.xy * res.xy + vec2(0.9, 0.0), mod(uTime, 1000.0)));\n        float progress = clamp(((uTime * 0.5) - 10.0) / 30.0, 0.0, 1.0);\n\n        vec2 offset = (uMouse - vec2(0.5)) * (0.1 * 0.05) * uUseMouse;\n        vec2 myUV = (uv - vec2(0.5)) * res.zw + vec2(0.5) + offset;\n\n        myUV -= flow.xy * (0.015 * 0.2) * (noise.xy * uNoiseMultiplier);\n\n        vec3 tex = texture2D(uWater, myUV).rgb;\n        vec3 flowTex = (vec3(0.02) + (tex.rgb * (0.75 + (3.0 * progress))) + (noise * 0.2)) *\n                       (vec3(0.2, 0.2, 0.4) + ((vec3(0.3) + tex.rgb) * flow * noise * 2.0));\n\n        gl_FragColor = vec4(clamp(flowTex, vec3(0.0), vec3(1.0)), tex.r);\n      }\n    `;\n\n  const I = {\n    default: document.querySelector('meta[name=\"app:svg:default\"]').getAttribute('content'),\n    touch: document.querySelector('meta[name=\"app:svg:touch\"]').getAttribute('content')\n  };\n\n  const S = {\n    isTouchCapable: 'ontouchstart' in window,\n    mouse: new Vec2(0.5),\n    velocity: new Vec2(),\n\n    previousTime: null,\n    previousMouse: new Vec2(),\n\n    aspect: 1,\n    image: {\n      url: '',\n      size: { x: 1600, y: 1200 }\n    },\n\n    renderer: null,\n    gl: null,\n    canvas: null,\n\n    flowmap: null,\n    geometry: null,\n    texture: null,\n    program: null,\n    mesh: null\n  };\n\n  const computeAspect = () => {\n    const imageAspect = S.image.size.y / S.image.size.x;\n    const windowAspect = {\n      h: window.innerHeight / window.innerWidth,\n      v: window.innerWidth / window.innerHeight\n    };\n\n    if (windowAspect.h < imageAspect) {\n      return { ah: 1, av: windowAspect.h / imageAspect };\n    }\n\n    return { ah: windowAspect.v * imageAspect, av: 1 };\n  };\n\n  const resize = () => {\n    const { ah, av } = computeAspect();\n\n    S.mesh.program.uniforms.res.value = new Vec4(\n      window.innerWidth,\n      window.innerHeight,\n      ah,\n      av\n    );\n\n    S.renderer.setSize(window.innerWidth, window.innerHeight);\n    S.aspect = window.innerWidth / window.innerHeight;\n  };\n\n  const updateMouse = event => {\n    const { changedTouches, pageX, pageY } = event;\n\n    // Do not prevent default as this blocks clicks on links on touch devices\n    // event.preventDefault();\n\n    const P = { x: event.x, y: event.y };\n\n    if (changedTouches && changedTouches.length) {\n      P.x = changedTouches[0].pageX;\n      P.y = changedTouches[0].pageY;\n    } else if (event.x === undefined) {\n      P.x = pageX;\n      P.y = pageY;\n    }\n\n    // Get mouse value in 0 to 1 range, with y flipped\n    S.mouse.set(P.x / S.gl.renderer.width, 1.0 - P.y / S.gl.renderer.height);\n\n    // Calculate velocity\n    if (!S.previousTime) {\n      // First frame\n      S.previousTime = window.performance.now();\n      S.previousMouse.set(P.x, P.y);\n    }\n\n    const deltaX = P.x - S.previousMouse.x;\n    const deltaY = P.y - S.previousMouse.y;\n\n    S.previousMouse.set(P.x, P.y);\n\n    const time = window.performance.now();\n\n    // Avoid dividing by 0\n    const delta = Math.max(10.4, time - S.previousTime);\n\n    S.previousTime = time;\n    S.velocity.x = deltaX / delta;\n    S.velocity.y = deltaY / delta;\n\n    // Flag update to prevent hanging velocity values when not moving\n    S.velocity.needsUpdate = true;\n  };\n\n  init(() => {\n    S.renderer = new Renderer({\n      dpr: 2,\n      alpha: true,\n      premultipliedAlpha: true\n    });\n\n    S.gl = S.renderer.gl;\n    S.canvas = S.gl.canvas;\n\n    S.canvas.setAttribute('id', 'scene');\n    document.body.appendChild(S.canvas);\n\n    S.flowmap = new Flowmap(S.gl, {\n      size: 512,\n      falloff: S.isTouchCapable ? 0.3 : 0.4,\n      dissipation: 0.95\n    });\n\n    S.geometry = new Geometry(S.gl, {\n      position: {\n        size: 2,\n        data: new Float32Array([-1, -1, 3, -1, -1, 3])\n      },\n      uv: {\n        size: 2,\n        data: new Float32Array([0, 0, 2, 0, 0, 2])\n      }\n    });\n\n    S.texture = new Texture(S.gl, {\n      minFilter: S.gl.LINEAR,\n      magFilter: S.gl.LINEAR,\n      premultiplyAlpha: true\n    });\n\n    const img = new Image();\n\n    img.addEventListener('load', () => (S.texture.image = img));\n\n    if (S.isTouchCapable) {\n      img.src = I.touch;\n    } else {\n      img.src = I.default;\n    }\n\n    const { ah, av } = computeAspect();\n\n    S.program = new Program(S.gl, {\n      vertex: vertexShader,\n      fragment: fragmentShader,\n      uniforms: {\n        uTime: { value: 0 },\n        uMouse: { value: S.mouse },\n        uUseMouse: { value: S.isTouchCapable ? 0.0 : 1.0 },\n        uNoiseMultiplier: { value: S.isTouchCapable ? 16.0 : 3.0 },\n        uWater: { value: S.texture },\n        uFlow: S.flowmap.uniform,\n        img: { value: new Vec2(S.image.size.x, S.image.size.y) },\n        res: {\n          value: new Vec4(window.innerWidth, window.innerHeight, ah, av)\n        }\n      }\n    });\n\n    S.mesh = new Mesh(S.gl, { geometry: S.geometry, program: S.program });\n\n    window.addEventListener('resize', resize, false);\n    resize();\n\n    if (S.isTouchCapable) {\n      window.addEventListener('touchstart', updateMouse, { passive: false });\n      window.addEventListener('touchmove', updateMouse, { passive: false });\n    } else {\n      window.addEventListener('mousemove', updateMouse, false);\n    }\n\n    const update = elapsed => {\n      requestAnimationFrame(update);\n\n      if (!S.velocity.needsUpdate) {\n        S.velocity.set(0);\n      }\n\n      S.velocity.needsUpdate = false;\n\n      S.flowmap.aspect = S.aspect;\n      S.flowmap.mouse.copy(S.mouse);\n      S.flowmap.velocity.lerp(S.velocity, S.velocity.len ? 0.15 : 0.1);\n      S.flowmap.update();\n\n      S.program.uniforms.uTime.value = elapsed * 0.01;\n\n      S.renderer.render({ scene: S.mesh });\n    };\n\n    requestAnimationFrame(update);\n  });\n})();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}